/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as faces from "../interfaces"
import { core } from "@nexus/schema"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "Date";
    url<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "URL";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
    url<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "URL";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: Date
  URL: URL
}

export interface NexusGenRootTypes {
  Bio: faces.BioInterface;
  Education: faces.EducationInterface;
  Language: faces.LanguageInterface;
  Position: faces.PositionInterface;
  Project: faces.ProjectInterface;
  Query: {};
  SocialLink: faces.SocialLinkInterface;
  Technology: faces.TechnologyInterface;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
  Date: NexusGenScalars['Date'];
  URL: NexusGenScalars['URL'];
}

export interface NexusGenFieldTypes {
  Bio: { // field return type
    email: string; // String!
    location: string; // String!
    name: string; // String!
    objective: string; // String!
    shortDescription: string; // String!
    tagline: string; // String!
    website: string; // String!
  }
  Education: { // field return type
    endDate: NexusGenScalars['Date'] | null; // Date
    id: string; // ID!
    institution: string; // String!
    shortDescription: string; // String!
    startDate: NexusGenScalars['Date']; // Date!
    title: string; // String!
  }
  Language: { // field return type
    id: string; // ID!
    level: string; // String!
    name: string; // String!
  }
  Position: { // field return type
    achievements: string[]; // [String!]!
    company: string; // String!
    endDate: NexusGenScalars['Date'] | null; // Date
    id: string; // ID!
    location: string; // String!
    months: number; // Int!
    startDate: NexusGenScalars['Date']; // Date!
    title: string; // String!
    years: number; // Int!
  }
  Project: { // field return type
    githubRepo: string; // String!
    id: string; // ID!
    liveProject: string; // String!
    shortDescription: string; // String!
    technologies: string[]; // [String!]!
    title: string; // String!
  }
  Query: { // field return type
    bio: NexusGenRootTypes['Bio']; // Bio!
    education: NexusGenRootTypes['Education'] | null; // Education
    educations: NexusGenRootTypes['Education'][]; // [Education!]!
    language: NexusGenRootTypes['Language'] | null; // Language
    languages: NexusGenRootTypes['Language'][]; // [Language!]!
    position: NexusGenRootTypes['Position'] | null; // Position
    positions: NexusGenRootTypes['Position'][]; // [Position!]!
    project: NexusGenRootTypes['Project'] | null; // Project
    projects: NexusGenRootTypes['Project'][]; // [Project!]!
    socialLink: NexusGenRootTypes['SocialLink'] | null; // SocialLink
    socialLinks: NexusGenRootTypes['SocialLink'][]; // [SocialLink!]!
    technologies: NexusGenRootTypes['Technology'][]; // [Technology!]!
    technology: NexusGenRootTypes['Technology'] | null; // Technology
  }
  SocialLink: { // field return type
    icon: string; // String!
    id: string; // ID!
    name: string; // String!
    url: NexusGenScalars['URL']; // URL!
  }
  Technology: { // field return type
    icon: string; // String!
    id: string; // ID!
    name: string; // String!
  }
}

export interface NexusGenArgTypes {
  Query: {
    education: { // args
      id?: string | null; // ID
    }
    language: { // args
      id?: string | null; // ID
    }
    position: { // args
      id?: string | null; // ID
    }
    project: { // args
      id?: string | null; // ID
    }
    socialLink: { // args
      id?: string | null; // ID
    }
    technology: { // args
      id?: string | null; // ID
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Bio" | "Education" | "Language" | "Position" | "Project" | "Query" | "SocialLink" | "Technology";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Date" | "Float" | "ID" | "Int" | "String" | "URL";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: {};
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}